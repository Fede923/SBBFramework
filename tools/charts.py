#!/usr/bin/env python
# encoding: utf-8
## vim:ts=4:et:nowrap

# http://www.danielsoper.com/statcalc3/calc.aspx?id=96
# https://www.mccallum-layton.co.uk/tools/statistic-calculators/confidence-interval-for-mean-calculator/#confidence-interval-for-mean-calculator

import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import numpy as np
import matplotlib.mlab as mlab
import math

patches = []

use_chart1 = True

if use_chart1:

    chart_title = "Champion"
    axis_type = [0, 6, 0.45, 0.55] # per validation
    d = [
        [0.47458, 0.49827, 0.52194, 0.50581, 0.51148, 0.51244, 0.51512],
        [0.48258, 0.51201, 0.51952, 0.50632, 0.50903, 0.5112, 0.51203],
        [0.47235, 0.49908, 0.49114, 0.50117, 0.50169, 0.49715, 0.49576],
        [0.47934, 0.4869, 0.50008, 0.49875, 0.50203, 0.50199, 0.50721],
    ]

    data = d[0]
    color = 'r'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run1'))

    data = d[1]
    color = 'b'
    # color = '#B00000'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run2'))

    data = d[2]
    color = 'g'
    # color = 'b'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run3'))

    data = d[3]
    color = 'm'
    # color = '#000066'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run4'))

    # data = d[4]
    # color = 'c'
    # # color = 'g'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams'))

    # data = d[5]
    # color = 'y'
    # # color = '#003300'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run3-1000matches (riv-to-full+all)'))

    # data = d[6]
    # color = 'k'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run7'))

    plt.title(chart_title)
    plt.legend(handles=patches, loc=1)
    plt.axis(axis_type)
    plt.show()

    #######################################
else:

    d1 = [
    [617.131, 615.379, 613.283, 612.558, 610.699, 608.999, 608.322, 607.131, 605.806, 605.312, 604.339, 603.268, 602.954, 601.974, 601.32, 599.902, 598.758, 597.116, 596.429, 595.964, 595.054, 594.435, 592.76, 590.916, 589.139, 587.845, 586.424, 584.649, 584.014, 582.06, 580.849, 579.756, 578.593, 577.691, 576.099, 574.97, 573.933, 571.922, 568.029, 566.62, 565.529, 564.32, 560.274, 559.129, 555.577, 553.645, 549.516, 545.849, 541.287, 529.899],
    [617.131, 649.239, 669.912, 674.524, 689.374, 694.879, 698.331, 701.035, 703.199, 707.891, 715.054, 715.739, 717.154, 718.016, 720.274, 721.739, 724.602, 725.379, 725.862, 726.827, 728.02, 729.983, 730.431, 730.745, 733.997, 735.631, 736.012, 736.343, 737.756, 738.364, 739.077, 739.308, 741.064, 741.295, 741.387, 741.977, 742.391, 742.433, 742.929, 743.57, 743.897, 744.156, 744.495, 744.583, 745.233, 745.408, 745.483, 745.687, 745.787, 745.854],
]
    d2 = [
    [615.312, 613.318, 611.839, 610.787, 609.572, 608.543, 606.947, 606.245, 604.718, 603.712, 603.068, 602.406, 601.385, 600.402, 598.922, 598.337, 596.618, 596.229, 595.639, 595.362, 593.862, 592.266, 590.108, 588.831, 587.941, 586.131, 584.531, 584.195, 582.72, 581.787, 580.758, 578.497, 576.622, 575.404, 573.987, 571.66, 569.76, 567.66, 565.479, 563.366, 561.012, 558.806, 556.522, 554.756, 551.933, 548.664, 544.36, 541.558, 527.812, 508.145],
    [615.312, 646.435, 654.927, 661.008, 666.545, 667.941, 677.418, 678.645, 683.029, 686.579, 698.743, 704.96, 706.845, 710.183, 713.997, 715.924, 717.537, 718.718, 722.424, 723.237, 727.256, 729.662, 731.693, 732.472, 735.281, 735.897, 736.127, 736.787, 738.464, 740.285, 740.887, 741.237, 741.533, 741.77, 742.097, 742.204, 742.291, 742.445, 742.633, 742.854, 742.999, 743.062, 743.17, 743.308, 743.641, 743.954, 744.724, 744.937, 745.179, 745.912],
]
    d3 = [
    [583.064, 582.208, 580.814, 579.031, 577.506, 576.262, 575.299, 574.122, 573.758, 572.606, 571.912, 571.539, 570.91, 570.327, 569.839, 569.258, 567.729, 567.135, 566.531, 565.537, 563.918, 563.56, 562.67, 562.014, 560.629, 559.441, 558.493, 556.366, 555.391, 553.835, 552.989, 552.039, 550.999, 550.012, 548.208, 547.454, 545.762, 544.608, 544.014, 541.595, 540.908, 539.864, 536.483, 533.422, 531.366, 529.347, 524.01, 521.829, 515.274, 505.764],
    [583.064, 611.012, 630.929, 642.922, 650.485, 655.872, 657.993, 664.091, 666.472, 671.654, 674.727, 675.41, 676.277, 677.266, 677.897, 678.122, 680.637, 682.683, 684.058, 684.599, 685.229, 686.704, 690.658, 691.124, 691.845, 693.195, 694.102, 696.264, 697.239, 697.431, 698.077, 699.041, 699.574, 700.758, 701.812, 705.562, 706.285, 707.32, 708.156, 708.71, 708.899, 709.01, 709.12, 709.837, 710.079, 710.099, 712.006, 712.602, 712.627, 712.822],
]
    d4 = [
    [593.091, 591.774, 589.927, 588.199, 586.897, 586.154, 584.108, 582.072, 580.816, 579.127, 577.268, 576.083, 574.508, 573.672, 572.397, 570.289, 569.706, 568.972, 568.145, 567.077, 566.02, 564.664, 563.37, 562.014, 560.383, 559.82, 559.156, 558.352, 557.587, 556.697, 555.297, 552.12, 551.279, 548.885, 548.027, 546.637, 546.047, 544.868, 541.181, 540.449, 538.668, 536.447, 534.979, 533.577, 530.902, 527.86, 526.079, 522.97, 518.054, 504.631],
    [593.091, 608.024, 613.599, 630.118, 633.995, 635.931, 642.485, 647.979, 649.945, 651.735, 656.622, 658.247, 661.612, 664.212, 666.058, 667.06, 672.985, 676.26, 679.391, 680.562, 681.589, 687.139, 688.897, 693.26, 695.96, 697.112, 701.402, 701.922, 702.547, 702.964, 703.708, 704.462, 704.968, 705.231, 706.389, 707.166, 707.622, 708.11, 708.189, 708.893, 709.477, 710.508, 710.737, 711.01, 711.122, 711.433, 711.562, 711.697, 711.837, 712.047],
]
    data = d1[0]
    color = '#B00000'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run1: indiv.'))
    data = d1[1]
    color = 'r'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run1: accum.'))

    data = d2[0]
    color = '#000066'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run2: indiv.'))
    data = d2[1]
    color = 'b'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run2: accum.'))

    data = d3[0]
    color = '#006600'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run3: indiv.'))
    data = d3[1]
    color = 'g'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run3: accum.'))

    data = d4[0]
    color = '#CC0066'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run4: indiv.'))
    data = d4[1]
    color = 'm'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run4: accum.'))

#     d = [
# [242.32, 239.399, 238.768, 237.899, 237.241, 236.024, 235.16, 234.464, 233.462, 231.695, 230.879, 230.166, 229.577, 228.797, 227.739, 227.11, 226.506, 225.31, 224.191, 222.974, 222.562, 221.762, 219.924, 219.041, 217.406, 216.993, 215.585, 215.166, 212.997, 211.333, 210.635, 208.218, 202.285, 201.381, 200.439, 199.772, 197.943, 196.439, 192.96, 184.939],
# [242.32, 256.031, 266.545, 270.168, 272.199, 278.424, 280.449, 281.649, 282.245, 283.993, 285.741, 286.731, 288.452, 289.687, 290.216, 290.697, 291.643, 292.314, 293.372, 295.956, 296.683, 298.022, 298.064, 298.149, 299.066, 299.202, 299.327, 300.102, 300.295, 300.424, 300.539, 302.595, 302.687, 302.774, 303.358, 303.595, 303.604, 303.604, 303.629, 303.92]
#     ]
#     data = d[0]
#     color = '#003300'
#     plt.plot(data, color)
#     patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams: indiv.'))
#     data = d[1]
#     color = 'y'
#     plt.plot(data, color)
#     patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams: accum.'))

    plt.title("Accumulative Curve")
    plt.legend(handles=patches, loc=1)
    plt.axis([0, 49, 0, 1584])
    plt.show()