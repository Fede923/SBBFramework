#!/usr/bin/env python
# encoding: utf-8
## vim:ts=4:et:nowrap

# http://www.danielsoper.com/statcalc3/calc.aspx?id=96
# https://www.mccallum-layton.co.uk/tools/statistic-calculators/confidence-interval-for-mean-calculator/#confidence-interval-for-mean-calculator

import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import numpy as np
import matplotlib.mlab as mlab
import math

patches = []

use_chart1 = False

if use_chart1:

    chart_title = "Champion"
    axis_type = [0, 6, 0.45, 0.55] # per validation
    d = [
        [0.47354, 0.50061, 0.49936, 0.50565, 0.51183, 0.51341, 0.51583],
        [0.48731, 0.50361, 0.50701, 0.51067, 0.51813, 0.51609, 0.51748],
    ]

    data = d[0]
    color = 'r'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run1'))

    data = d[1]
    color = 'b'
    # color = '#B00000'
    plt.plot(data,color)
    patches.append(mpatches.Patch(color=color, label='run2'))

    # data = d[2]
    # color = 'g'
    # # color = 'b'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run3'))

    # data = d[3]
    # color = 'm'
    # # color = '#000066'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run4'))

    # data = d[4]
    # color = 'c'
    # # color = 'g'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams'))

    # data = d[5]
    # color = 'y'
    # # color = '#003300'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run3-1000matches (riv-to-full+all)'))

    # data = d[6]
    # color = 'k'
    # plt.plot(data,color)
    # patches.append(mpatches.Patch(color=color, label='run7'))

    plt.title(chart_title)
    plt.legend(handles=patches, loc=1)
    plt.axis(axis_type)
    plt.show()

    #######################################
else:

    d1 = [
    [623.291, 622.26, 621.374, 620.029, 618.712, 616.893, 616.349, 616.035, 614.964, 614.018, 612.737, 611.439, 609.989, 609.249, 608.008, 606.36, 605.218, 603.662, 602.033, 600.922, 600.331, 599.112, 598.51, 595.81, 594.556, 592.504, 591.066, 589.406, 586.587, 584.964, 583.254, 582.17, 579.818, 578.981, 577.549, 577.037, 576.452, 573.743, 572.37, 570.472, 568.347, 565.906, 562.66, 560.702, 558.954, 554.831, 551.677, 548.639, 540.577, 530.093],
    [623.291, 639.097, 652.881, 660.935, 665.191, 670.777, 672.695, 676.57, 678.816, 682.11, 685.906, 689.477, 693.743, 698.966, 701.458, 703.072, 705.791, 710.479, 712.72, 715.231, 720.627, 721.772, 724.608, 726.943, 727.962, 728.933, 730.937, 733.149, 736.039, 736.516, 738.152, 738.527, 740.927, 741.354, 741.939, 742.51, 742.641, 743.177, 744.179, 744.187, 744.533, 744.693, 744.822, 744.902, 744.918, 744.977, 745.312, 745.366, 745.491, 745.562],
]
    d2 = [
    [624.241, 623.745, 622.297, 621.435, 621.031, 620.585, 619.949, 618.566, 618.056, 617.747, 617.26, 616.414, 616.202, 615.422, 614.989, 614.729, 613.985, 613.012, 612.402, 611.639, 611.243, 610.439, 609.885, 609.395, 608.974, 608.16, 607.314, 605.864, 604.658, 603.041, 602.304, 601.71, 601.408, 600.92, 599.589, 598.122, 597.212, 596.306, 595.731, 594.916, 592.508, 591.462, 590.662, 589.87, 588.422, 586.529, 584.999, 582.556, 571.935, 556.791],
    [624.241, 651.029, 664.412, 672.785, 677.512, 680.608, 683.327, 686.47, 691.295, 695.243, 697.149, 698.916, 702.108, 704.102, 706.095, 708.454, 709.256, 712.208, 712.958, 714.081, 714.591, 715.433, 715.983, 716.577, 717.937, 718.354, 719.293, 719.664, 720.045, 720.67, 721.383, 722.066, 722.508, 722.772, 723.808, 724.091, 724.331, 725.781, 725.993, 726.21, 726.712, 727.216, 728.295, 728.724, 729.087, 729.306, 729.441, 729.954, 730.231, 730.379],
]
    d3 = [
    [624.347, 622.643, 620.691, 619.149, 618.833, 617.681, 616.999, 616.645, 616.197, 615.879, 615.399, 615.022, 613.881, 613.277, 612.897, 611.87, 611.368, 610.941, 609.935, 608.716, 608.137, 606.87, 606.312, 605.635, 604.858, 604.127, 603.058, 602.485, 601.839, 601.035, 600.097, 598.666, 596.37, 595.356, 594.279, 593.079, 592.208, 590.91, 589.812, 587.247, 585.122, 583.218, 578.799, 577.135, 574.797, 570.529, 568.116, 566.391, 561.241, 554.133],
    [624.347, 650.77, 664.649, 672.822, 679.281, 683.924, 687.22, 693.199, 696.072, 697.883, 699.67, 701.281, 703.933, 704.918, 707.481, 709.335, 710.612, 712.299, 715.147, 716.76, 719.141, 719.889, 721.545, 722.374, 723.106, 724.024, 725.354, 725.893, 726.352, 726.735, 727.277, 727.562, 727.881, 728.177, 728.383, 728.695, 728.96, 729.224, 729.908, 730.208, 731.366, 732.129, 732.483, 732.916, 733.358, 733.666, 733.966, 734.12, 734.529, 734.704],
]
    d4 = [
    [626.81, 623.695, 621.193, 619.454, 618.741, 618.074, 617.652, 617.052, 615.887, 615.391, 614.314, 614.047, 612.883, 611.716, 610.997, 610.343, 609.843, 609.262, 608.497, 607.458, 606.979, 606.056, 604.999, 603.864, 602.649, 600.393, 597.845, 596.858, 595.891, 594.518, 593.895, 593.11, 591.889, 590.549, 589.389, 587.739, 586.535, 585.962, 583.714, 580.745, 577.868, 576.239, 574.383, 572.599, 570.91, 569.216, 566.968, 566.072, 563.449, 551.872],
    [626.81, 656.06, 670.852, 679.487, 687.664, 692.568, 696.554, 699.291, 701.556, 703.854, 704.864, 705.864, 707.922, 709.662, 711.402, 712.427, 713.91, 714.754, 715.458, 716.783, 717.72, 718.37, 719.441, 720.393, 720.747, 721.474, 722.439, 723.856, 724.764, 725.814, 726.889, 727.316, 728.185, 728.737, 729.46, 730.31, 730.589, 730.831, 731.272, 733.004, 733.306, 733.452, 734.529, 734.891, 735.412, 735.487, 735.643, 735.952, 736.516, 736.652],
]
    data = d1[0]
    color = '#B00000'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run1: indiv.'))
    data = d1[1]
    color = 'r'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run1: accum.'))

    data = d2[0]
    color = '#000066'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run2: indiv.'))
    data = d2[1]
    color = 'b'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run2: accum.'))

    data = d3[0]
    color = '#006600'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run3: indiv.'))
    data = d3[1]
    color = 'g'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run3: accum.'))

    data = d4[0]
    color = '#CC0066'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run4: indiv.'))
    data = d4[1]
    color = 'm'
    plt.plot(data, color)
    patches.append(mpatches.Patch(color=color, label='run4: accum.'))

#     d = [
# [242.32, 239.399, 238.768, 237.899, 237.241, 236.024, 235.16, 234.464, 233.462, 231.695, 230.879, 230.166, 229.577, 228.797, 227.739, 227.11, 226.506, 225.31, 224.191, 222.974, 222.562, 221.762, 219.924, 219.041, 217.406, 216.993, 215.585, 215.166, 212.997, 211.333, 210.635, 208.218, 202.285, 201.381, 200.439, 199.772, 197.943, 196.439, 192.96, 184.939],
# [242.32, 256.031, 266.545, 270.168, 272.199, 278.424, 280.449, 281.649, 282.245, 283.993, 285.741, 286.731, 288.452, 289.687, 290.216, 290.697, 291.643, 292.314, 293.372, 295.956, 296.683, 298.022, 298.064, 298.149, 299.066, 299.202, 299.327, 300.102, 300.295, 300.424, 300.539, 302.595, 302.687, 302.774, 303.358, 303.595, 303.604, 303.604, 303.629, 303.92]
#     ]
#     data = d[0]
#     color = '#003300'
#     plt.plot(data, color)
#     patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams: indiv.'))
#     data = d[1]
#     color = 'y'
#     plt.plot(data, color)
#     patches.append(mpatches.Patch(color=color, label='800matches_160gens_12teams: accum.'))

    plt.title("Accumulative Curve")
    plt.legend(handles=patches, loc=1)
    plt.axis([0, 49, 0, 1584])
    plt.show()