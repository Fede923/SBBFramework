TEAM (4108-99)

#### METRICS
(4108-99)
team members (3), A: ['(11399:90, 0)', '(12492:98, 0)', '(12548:99, 2)'], I: []
- validation: A: ['(11399:90, 0)', '(12492:98, 0)', '(12548:99, 2)'], I: []
fitness: 0.48327, test score: 0.48498
inputs distribution: Counter({3: 2, 8: 2, 11: 2, 15: 2, 1: 1, 4: 1, 5: 1, 6: 1, 17: 1})
last opponent played against (training): loose_agressive

hands (validation):
total: 297, played: 0.0101, won: 0.0
position, 0 (131): played: 0.0229, won: 0.0
position, 1 (166): played: 0.0, won: None
sbb_sd, 0 (144): played: 0.00694, won: 0.0
sbb_sd, 1 (10): played: 0.0, won: None
sbb_sd, 2 (143): played: 0.01398, won: 0.0
sbb_label, 0 (33): played: 0.0, won: None
sbb_label, 1 (33): played: 0.0, won: None
sbb_label, 2 (33): played: 0.0, won: None
sbb_label, 3 (33): played: 0.0, won: None
sbb_label, 4 (33): played: 0.0303, won: 0.0
sbb_label, 5 (33): played: 0.0, won: None
sbb_label, 6 (33): played: 0.0303, won: 0.0
sbb_label, 7 (33): played: 0.0303, won: 0.0
sbb_label, 8 (33): played: 0.0, won: None

agressiveness: 0.00980392156863
volatility: 0.888014763015

score per point (validation): 
position: {0: 0.47916, 1: 0.48958}
sbb_sd: {0: 0.48524, 1: 0.48749, 2: 0.48455}
sbb_label: {0: 0.48484, 1: 0.48611, 2: 0.48516, 3: 0.4839, 4: 0.48295, 5: 0.48642, 6: 0.48516, 7: 0.48484, 8: 0.48547}

score per opponent (validation): 0.48498
loose_agressive: 0.48513
tight_agressive: 0.48625
tight_passive: 0.48596
loose_passive: 0.48263

entropy_c3: 0.01895
genotype: 0.81666

######## PROGRAMS (ACTIVE)

#### Program (11399:90, 0)
Participate in the teams (7): ['(3916-94)', '(4010-96)', '(4049-97)', '(4108-99)', '(4113-99)', '(4168-100)', '(4169-100)']
Action Type: atomic
================

Total instructions (without introns): 5
Inputs used: [3, 11]
----------------

r[0] = r[0] * r[1]
r[0] = r[0] + i[3]
r[0] = cos(r[0])
if r[0] >= r[0]: -r[0]
r[0] = r[0] * i[11]

================

Total instructions: 22
----------------

r[2] = exp(r[2])
r[0] = r[0] * r[1]
r[1] = cos(r[1])
r[2] = cos(r[2])
if r[3] < r[3]:
    r[2] = ln(r[2])
r[0] = r[0] + i[3]
r[2] = exp(r[2])
r[2] = r[2] - i[17]
r[3] = ln(r[3])
r[3] = cos(r[3])
if r[3] >= i[9]: -r[3]
r[0] = cos(r[0])
if r[3] >= r[0]: -r[3]
if r[1] >= r[1]: -r[1]
if r[0] < i[9]:
    r[1] = r[1] - i[8]
if r[1] >= r[1]:
    r[1] = cos(r[1])
if r[0] >= r[0]: -r[0]
r[0] = r[0] * i[11]
if r[0] < i[6]:

################

#### Program (12492:98, 0)
Participate in the teams (1): ['(4108-99)']
Action Type: atomic
================

Total instructions (without introns): 10
Inputs used: [11, 8, 15]
----------------

r[0] = r[0] + r[2]
r[0] = cos(r[0])
r[3] = r[3] / r[2]
r[3] = exp(r[3])
r[1] = cos(r[1])
r[0] = r[0] * r[1]
r[3] = r[3] - i[11]
if r[1] >= i[8]:
    r[0] = r[0] * r[3]
if r[0] >= i[15]: -r[0]

================

Total instructions: 23
----------------

r[0] = r[0] + r[2]
r[0] = cos(r[0])
r[3] = r[3] / r[2]
r[2] = exp(r[2])
r[3] = exp(r[3])
r[1] = cos(r[1])
r[0] = r[0] * r[1]
r[2] = cos(r[2])
r[3] = r[3] - i[11]
if r[1] >= i[8]:
    r[0] = r[0] * r[3]
if r[0] >= i[15]: -r[0]
r[3] = r[3] - i[4]
r[3] = ln(r[3])
r[3] = r[3] - i[13]
if r[3] >= r[0]: -r[3]
r[2] = ln(r[2])
if r[1] >= r[1]: -r[1]
r[1] = ln(r[1])
r[2] = cos(r[2])
r[1] = ln(r[1])
if r[3] >= i[9]: -r[3]
if r[3] < i[3]:

################

#### Program (12548:99, 2)
Participate in the teams (1): ['(4108-99)']
Action Type: atomic
================

Total instructions (without introns): 25
Inputs used: [5, 4, 17, 15, 1, 6, 8, 3]
----------------

r[3] = ln(r[3])
if r[1] >= r[2]: -r[1]
r[0] = r[0] / i[5]
r[2] = r[2] * r[1]
if r[1] >= i[4]: -r[1]
r[1] = r[1] * i[17]
r[1] = r[1] - r[0]
r[2] = r[2] / r[2]
r[3] = r[3] + r[0]
if r[2] >= i[15]: -r[2]
r[0] = ln(r[0])
if r[3] >= r[2]:
    if r[2] >= i[1]: -r[2]
if r[0] < i[6]:
    r[0] = r[0] - i[4]
r[0] = r[0] / r[3]
if r[1] < i[1]:
    r[0] = r[0] / i[17]
if r[0] < r[1]:
    r[2] = cos(r[2])
r[2] = r[2] / r[3]
if r[2] < r[1]:
    if r[0] < i[8]:
        if r[0] >= i[3]: -r[0]
r[0] = exp(r[0])

================

Total instructions: 29
----------------

r[3] = ln(r[3])
if r[1] >= r[2]: -r[1]
r[0] = r[0] / i[5]
r[2] = r[2] * r[1]
if r[1] >= i[4]: -r[1]
r[1] = r[1] * i[17]
r[1] = r[1] - r[0]
r[2] = r[2] / r[2]
r[3] = r[3] + r[0]
if r[2] >= i[15]: -r[2]
r[0] = ln(r[0])
if r[3] >= r[2]:
    if r[2] >= i[1]: -r[2]
if r[0] < i[6]:
    r[0] = r[0] - i[4]
r[0] = r[0] / r[3]
if r[1] < i[1]:
    r[0] = r[0] / i[17]
if r[0] < r[1]:
    r[2] = cos(r[2])
r[2] = r[2] / r[3]
if r[2] < r[1]:
    if r[0] < i[8]:
        if r[0] >= i[3]: -r[0]
r[0] = exp(r[0])
r[1] = cos(r[1])
if r[3] >= r[1]: -r[3]
r[1] = r[1] / r[3]
r[2] = exp(r[2])

################

######## PROGRAMS (INACTIVE)
[No inactive programs]