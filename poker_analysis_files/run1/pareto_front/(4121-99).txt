TEAM (4121-99)

#### METRICS
(4121-99)
team members (2), A: ['(14389:96, 0)', '(13291:88, 2)'], I: []
- validation: A: ['(14389:96, 0)', '(13291:88, 2)'], I: []
fitness: 0.48232, test score: 0.48453
inputs distribution: Counter({3: 1, 5: 1, 8: 1, 10: 1, 14: 1, 15: 1, 16: 1, 17: 1})
last opponent played against (training): loose_agressive

hands (validation):
total: 297, played: 0.01346, won: 0.25
position, 0 (140): played: 0.02857, won: 0.25
position, 1 (157): played: 0.0, won: None
sbb_sd, 0 (145): played: 0.0, won: None
sbb_sd, 1 (9): played: 0.0, won: None
sbb_sd, 2 (143): played: 0.02797, won: 0.25
sbb_label, 0 (33): played: 0.0, won: None
sbb_label, 1 (33): played: 0.0, won: None
sbb_label, 2 (33): played: 0.0, won: None
sbb_label, 3 (33): played: 0.0303, won: 0.0
sbb_label, 4 (33): played: 0.0, won: None
sbb_label, 5 (33): played: 0.0, won: None
sbb_label, 6 (33): played: 0.0303, won: 0.0
sbb_label, 7 (33): played: 0.0606, won: 0.5
sbb_label, 8 (33): played: 0.0, won: None

agressiveness: 0.0171821305842
volatility: 0.871515679443

score per point (validation): 
position: {0: 0.47886, 1: 0.48958}
sbb_sd: {0: 0.48354, 1: 0.48495, 2: 0.4855}
sbb_label: {0: 0.48547, 1: 0.48232, 2: 0.48453, 3: 0.48579, 4: 0.48421, 5: 0.48327, 6: 0.48358, 7: 0.48674, 8: 0.48484}

score per opponent (validation): 0.48453
loose_agressive: 0.48402
tight_agressive: 0.485
tight_passive: 0.48495
loose_passive: 0.48416

entropy_c3: 0.01504
genotype: 0.9375

######## PROGRAMS (ACTIVE)

#### Program (14389:96, 0)
Participate in the teams (2): ['(4121-99)', '(4178-100)']
Action Type: atomic
================

Total instructions (without introns): 10
Inputs used: [10, 17, 15, 8, 14]
----------------

r[0] = r[0] - i[10]
r[0] = r[0] - i[17]
r[1] = exp(r[1])
if r[0] >= r[0]:
    if r[1] < i[15]:
        r[0] = r[0] + i[8]
r[3] = r[3] + r[1]
if r[3] >= i[14]:
    r[0] = exp(r[0])
r[0] = r[0] * r[0]

================

Total instructions: 26
----------------

if r[2] >= i[7]: -r[2]
r[0] = r[0] - i[10]
r[0] = r[0] - i[17]
r[1] = exp(r[1])
if r[0] >= r[0]:
    if r[1] < i[15]:
        r[0] = r[0] + i[8]
r[3] = r[3] + r[1]
if r[3] >= i[14]:
    r[0] = exp(r[0])
r[1] = r[1] * i[7]
r[1] = ln(r[1])
if r[3] >= r[0]: -r[3]
r[3] = cos(r[3])
if r[2] >= r[0]: -r[2]
r[2] = exp(r[2])
r[0] = r[0] * r[0]
if r[3] >= r[0]: -r[3]
r[1] = exp(r[1])
if r[1] >= i[9]: -r[1]
if r[0] >= i[13]:
    r[3] = r[3] + r[2]
r[3] = r[3] / i[1]
r[2] = r[2] + r[3]
r[3] = ln(r[3])
r[1] = cos(r[1])

################

#### Program (13291:88, 2)
Participate in the teams (4): ['(3761-90)', '(4105-99)', '(4121-99)', '(4151-100)']
Action Type: atomic
================

Total instructions (without introns): 8
Inputs used: [16, 3, 5]
----------------

r[3] = ln(r[3])
r[0] = r[0] - i[16]
r[0] = r[0] / r[0]
r[3] = r[3] + i[3]
if r[3] >= i[5]: -r[3]
if r[0] >= r[0]: -r[0]
r[3] = cos(r[3])
r[0] = r[0] + r[3]

================

Total instructions: 18
----------------

r[3] = ln(r[3])
r[2] = r[2] / i[7]
r[0] = r[0] - i[16]
if r[2] >= r[2]:
    if r[3] >= r[0]:
        r[2] = r[2] - r[2]
r[1] = exp(r[1])
r[0] = r[0] / r[0]
r[3] = r[3] + i[3]
if r[3] >= i[5]: -r[3]
r[1] = ln(r[1])
r[2] = r[2] - i[14]
r[1] = exp(r[1])
if r[0] >= r[0]: -r[0]
if r[2] >= r[0]: -r[2]
r[3] = cos(r[3])
r[0] = r[0] + r[3]
if r[1] < i[12]:

################

######## PROGRAMS (INACTIVE)
[No inactive programs]