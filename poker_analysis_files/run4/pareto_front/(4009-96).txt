TEAM (4009-96)

#### METRICS
(4009-96)
team members (4), A: ['(7194:64, 2)', '(8951:83, 1)', '(10172:96, 0)', '(2098:17, 2)'], I: []
- validation: A: ['(8951:83, 1)', '(7194:64, 2)', '(10172:96, 0)', '(2098:17, 2)'], I: []
fitness: 0.56239, test score: 0.56267
inputs distribution: Counter({1: 3, 0: 2, 3: 2, 9: 2, 13: 2, 5: 1, 7: 1, 10: 1, 12: 1, 14: 1, 15: 1, 16: 1, 17: 1})
last opponent played against (training): tight_passive

hands (validation):
total: 297, played: 0.80808, won: 0.50416
position, 0 (138): played: 0.97826, won: 0.47407
position, 1 (159): played: 0.66037, won: 0.54285
sbb_sd, 0 (139): played: 0.83453, won: 1.0
sbb_sd, 1 (12): played: 0.75, won: 0.0
sbb_sd, 2 (146): played: 0.78767, won: 0.04347
sbb_label, 0 (33): played: 0.81818, won: 0.55555
sbb_label, 1 (33): played: 0.75757, won: 1.0
sbb_label, 2 (33): played: 0.87878, won: 1.0
sbb_label, 3 (33): played: 0.72727, won: 0.0
sbb_label, 4 (33): played: 0.81818, won: 0.33333
sbb_label, 5 (33): played: 0.87878, won: 1.0
sbb_label, 6 (33): played: 0.75757, won: 0.0
sbb_label, 7 (33): played: 0.84848, won: 0.0
sbb_label, 8 (33): played: 0.78787, won: 0.53846

agressiveness: 0.581254846816
volatility: 0.856018593675

score per point (validation): 
position: {0: 0.56302, 1: 0.56236}
sbb_sd: {0: 0.82066, 1: 0.49739, 2: 0.32241}
sbb_label: {0: 0.60921, 1: 0.81249, 2: 0.84406, 3: 0.22001, 4: 0.45012, 5: 0.84785, 6: 0.38131, 7: 0.38099, 8: 0.51799}

score per opponent (validation): 0.56267
loose_agressive: 0.49694
tight_agressive: 0.58541
tight_passive: 0.58998
loose_passive: 0.57944

entropy_c3: 0.0019
genotype: 0.86532

######## PROGRAMS (ACTIVE)

#### Program (7194:64, 2)
Participate in the teams (6): ['(2668-64)', '(3829-92)', '(3984-96)', '(4009-96)', '(4141-100)', '(4160-100)']
Action Type: atomic
================

Total instructions (without introns): 3
Inputs used: [0]
----------------

r[0] = cos(r[0])
if r[0] >= r[0]: -r[0]
r[0] = r[0] + i[0]

================

Total instructions: 22
----------------

if r[1] < i[2]:
    r[2] = r[2] / r[1]
r[3] = r[3] + i[11]
r[0] = cos(r[0])
r[3] = cos(r[3])
if r[1] >= i[6]: -r[1]
r[2] = r[2] * i[13]
if r[0] >= r[0]: -r[0]
r[1] = cos(r[1])
r[2] = r[2] - r[0]
r[3] = r[3] / r[3]
r[1] = ln(r[1])
if r[2] >= i[8]: -r[2]
r[0] = r[0] + i[0]
r[2] = r[2] / i[1]
if r[1] >= i[11]: -r[1]
r[3] = exp(r[3])
if r[3] >= r[0]:
    r[1] = r[1] * r[3]
r[2] = r[2] + r[2]
r[3] = exp(r[3])
r[2] = r[2] / r[2]

################

#### Program (8951:83, 1)
Participate in the teams (7): ['(3499-84)', '(3499-84)', '(3499-84)', '(4009-96)', '(4128-99)', '(4151-100)', '(4162-100)']
Action Type: atomic
================

Total instructions (without introns): 26
Inputs used: [9, 0, 16, 12, 1, 3]
----------------

r[2] = r[2] - i[9]
if r[2] >= i[9]: -r[2]
if r[3] >= r[3]:
    if r[0] < r[2]:
        r[0] = r[0] / i[0]
r[0] = r[0] + r[0]
r[1] = exp(r[1])
if r[1] >= i[16]: -r[1]
if r[3] >= r[3]:
    r[1] = r[1] / i[12]
r[0] = exp(r[0])
r[0] = cos(r[0])
r[0] = cos(r[0])
r[1] = ln(r[1])
r[0] = r[0] - r[1]
if r[3] < r[3]:
    if r[0] >= r[0]: -r[0]
r[1] = exp(r[1])
r[3] = exp(r[3])
r[0] = cos(r[0])
r[0] = r[0] + i[1]
r[0] = r[0] - i[3]
r[0] = r[0] + r[1]
if r[3] < r[0]:
    r[0] = r[0] + r[3]
r[0] = r[0] * r[0]

================

Total instructions: 29
----------------

r[2] = r[2] - i[9]
if r[2] >= i[9]: -r[2]
if r[3] >= r[3]:
    if r[0] < r[2]:
        r[0] = r[0] / i[0]
r[0] = r[0] + r[0]
r[1] = exp(r[1])
if r[1] >= i[16]: -r[1]
if r[3] >= r[3]:
    r[1] = r[1] / i[12]
r[0] = exp(r[0])
r[0] = cos(r[0])
r[0] = cos(r[0])
r[1] = ln(r[1])
r[0] = r[0] - r[1]
if r[3] < r[3]:
    if r[0] >= r[0]: -r[0]
r[1] = exp(r[1])
r[3] = exp(r[3])
r[0] = cos(r[0])
r[0] = r[0] + i[1]
r[0] = r[0] - i[3]
r[0] = r[0] + r[1]
if r[3] < r[0]:
    r[0] = r[0] + r[3]
r[0] = r[0] * r[0]
if r[3] >= r[3]:
    r[2] = cos(r[2])
r[2] = ln(r[2])

################

#### Program (10172:96, 0)
Participate in the teams (2): ['(4009-96)', '(4160-100)']
Action Type: atomic
================

Total instructions (without introns): 15
Inputs used: [15, 13, 1, 9, 3]
----------------

if r[1] >= r[0]: -r[1]
if r[3] >= r[2]: -r[3]
r[2] = r[2] / i[15]
r[3] = r[3] - i[13]
if r[3] >= i[1]:
    r[2] = r[2] + r[3]
r[0] = r[0] + r[1]
r[2] = exp(r[2])
if r[2] < r[1]:
    if r[0] >= r[2]: -r[0]
r[2] = r[2] + i[9]
if r[0] >= r[0]: -r[0]
r[0] = ln(r[0])
r[0] = r[0] - r[2]
r[0] = r[0] + i[3]

================

Total instructions: 22
----------------

if r[1] >= r[0]: -r[1]
if r[3] >= r[2]: -r[3]
r[2] = r[2] / i[15]
r[3] = r[3] - i[13]
if r[3] >= i[1]:
    r[2] = r[2] + r[3]
r[0] = r[0] + r[1]
r[2] = exp(r[2])
if r[2] < r[1]:
    if r[0] >= r[2]: -r[0]
r[2] = r[2] + i[9]
if r[0] >= r[0]: -r[0]
r[3] = r[3] + r[2]
r[1] = r[1] - r[0]
r[0] = ln(r[0])
r[1] = exp(r[1])
r[0] = r[0] - r[2]
r[2] = r[2] / i[0]
r[1] = r[1] * i[16]
r[0] = r[0] + i[3]
if r[2] >= i[4]: -r[2]
if r[0] >= i[3]:

################

#### Program (2098:17, 2)
Participate in the teams (5): ['(747-17)', '(923-21)', '(1242-29)', '(1033-24)', '(4009-96)']
Action Type: atomic
================

Total instructions (without introns): 21
Inputs used: [13, 7, 5, 17, 1, 14, 10]
----------------

r[2] = r[2] * i[13]
if r[2] >= i[7]:
    r[1] = r[1] - i[5]
r[0] = cos(r[0])
r[2] = r[2] * i[17]
if r[3] < r[0]:
    if r[1] >= r[2]:
        if r[0] < i[1]:
            r[2] = cos(r[2])
r[1] = r[1] * r[2]
r[2] = ln(r[2])
if r[3] < i[7]:
    if r[0] >= r[0]: -r[0]
r[3] = r[3] - r[3]
if r[3] >= i[13]:
    r[0] = r[0] - i[14]
if r[1] >= i[10]:
    r[2] = ln(r[2])
r[3] = r[3] + r[2]
if r[0] >= r[3]: -r[0]
r[0] = exp(r[0])

================

Total instructions: 26
----------------

r[2] = r[2] * i[13]
if r[2] >= i[7]:
    r[1] = r[1] - i[5]
r[0] = cos(r[0])
r[2] = r[2] * i[17]
if r[3] < r[0]:
    if r[1] >= r[2]:
        if r[0] < i[1]:
            r[2] = cos(r[2])
r[1] = r[1] * r[2]
r[2] = ln(r[2])
if r[3] < i[7]:
    if r[0] >= r[0]: -r[0]
r[3] = r[3] - r[3]
if r[3] >= i[13]:
    r[0] = r[0] - i[14]
if r[1] >= i[10]:
    r[2] = ln(r[2])
r[1] = r[1] / i[17]
r[3] = r[3] + r[2]
if r[0] >= r[3]: -r[0]
if r[2] >= r[1]: -r[2]
r[0] = exp(r[0])
r[1] = r[1] - r[1]
if r[2] < r[3]:
    r[2] = r[2] + r[0]

################

######## PROGRAMS (INACTIVE)
[No inactive programs]