TEAM (4105-99)

#### METRICS
(4105-99)
team members (2), A: ['(10322:99, 1)', '(9590:91, 2)'], I: []
- validation: A: ['(10322:99, 1)', '(9590:91, 2)'], I: []
fitness: 0.51052, test score: 0.51357
inputs distribution: Counter({1: 1, 3: 1, 7: 1, 9: 1, 11: 1, 13: 1})
last opponent played against (training): tight_agressive

hands (validation):
total: 297, played: 0.97643, won: 0.49655
position, 0 (144): played: 0.95138, won: 0.51094
position, 1 (153): played: 1.0, won: 0.48366
sbb_sd, 0 (148): played: 0.97972, won: 0.9931
sbb_sd, 1 (11): played: 1.0, won: 0.0
sbb_sd, 2 (138): played: 0.97101, won: 0.0
sbb_label, 0 (33): played: 0.96969, won: 0.375
sbb_label, 1 (33): played: 0.96969, won: 1.0
sbb_label, 2 (33): played: 0.96969, won: 1.0
sbb_label, 3 (33): played: 0.93939, won: 0.0
sbb_label, 4 (33): played: 1.0, won: 0.60606
sbb_label, 5 (33): played: 0.96969, won: 1.0
sbb_label, 6 (33): played: 1.0, won: 0.0
sbb_label, 7 (33): played: 0.96969, won: 0.0
sbb_label, 8 (33): played: 1.0, won: 0.48484

agressiveness: 0.521018062397
volatility: 0.5

score per point (validation): 
position: {0: 0.5222, 1: 0.50544}
sbb_sd: {0: 0.66195, 1: 0.5, 2: 0.35552}
sbb_label: {0: 0.51104, 1: 0.67203, 2: 0.66066, 3: 0.34595, 4: 0.54166, 5: 0.67203, 6: 0.36805, 7: 0.34059, 8: 0.5101}

score per opponent (validation): 0.51357
loose_agressive: 0.51166
tight_agressive: 0.49888
tight_passive: 0.52025
loose_passive: 0.52374

entropy_c3: 0.02613
genotype: 1.0

######## PROGRAMS (ACTIVE)

#### Program (10322:99, 1)
Participate in the teams (1): ['(4105-99)']
Action Type: atomic
================

Total instructions (without introns): 20
Inputs used: [9, 11, 13, 3, 1]
----------------

r[3] = exp(r[3])
r[3] = r[3] - i[9]
if r[1] >= i[11]: -r[1]
r[2] = ln(r[2])
r[1] = r[1] / i[11]
r[2] = r[2] - i[13]
if r[0] >= r[2]:
    r[1] = cos(r[1])
r[1] = ln(r[1])
r[0] = r[0] / r[2]
r[0] = r[0] * r[0]
r[1] = exp(r[1])
if r[3] >= r[0]: -r[3]
r[2] = ln(r[2])
r[3] = r[3] - r[1]
r[3] = r[3] + i[3]
r[3] = r[3] - r[2]
if r[3] >= r[2]:
    r[0] = r[0] + i[1]
r[0] = exp(r[0])

================

Total instructions: 23
----------------

r[3] = exp(r[3])
r[3] = r[3] - i[9]
if r[1] >= i[11]: -r[1]
r[2] = ln(r[2])
r[1] = r[1] / i[11]
r[2] = r[2] - i[13]
if r[0] >= r[2]:
    r[1] = cos(r[1])
r[1] = ln(r[1])
r[0] = r[0] / r[2]
r[0] = r[0] * r[0]
r[1] = exp(r[1])
if r[3] >= r[0]: -r[3]
r[2] = ln(r[2])
r[3] = r[3] - r[1]
r[3] = r[3] + i[3]
r[3] = r[3] - r[2]
r[1] = r[1] + i[0]
r[1] = r[1] / r[2]
if r[3] >= r[2]:
    r[0] = r[0] + i[1]
r[0] = exp(r[0])
r[1] = cos(r[1])

################

#### Program (9590:91, 2)
Participate in the teams (1): ['(4105-99)']
Action Type: atomic
================

Total instructions (without introns): 3
Inputs used: [7]
----------------

r[0] = cos(r[0])
r[0] = ln(r[0])
if r[0] >= i[7]: -r[0]

================

Total instructions: 22
----------------

r[2] = r[2] - r[0]
r[0] = cos(r[0])
if r[1] >= i[15]: -r[1]
if r[1] >= r[3]: -r[1]
r[1] = r[1] / r[3]
r[2] = r[2] / r[0]
if r[0] >= r[2]:
    r[1] = r[1] / i[13]
r[1] = r[1] + i[5]
if r[1] >= r[2]: -r[1]
if r[2] >= r[3]: -r[2]
r[0] = ln(r[0])
if r[0] >= i[7]: -r[0]
r[2] = r[2] * i[4]
r[1] = ln(r[1])
r[2] = r[2] / i[6]
if r[3] >= i[5]:
    r[1] = cos(r[1])
r[2] = r[2] * i[5]
r[1] = r[1] - i[6]
r[1] = r[1] / r[1]
r[1] = r[1] * r[1]

################

######## PROGRAMS (INACTIVE)
[No inactive programs]