
CONFIG: {'max_program_size': 30, 'task': 'classification', 'verbose': {'show_actions_distribution_per_generation': False}, 'initial_program_size': 10, 'max_generation_total': 100, 'minimum_team_size': 2, 'classification_parameters': {'use_oversampling': True, 'dataset': 'thyroid'}, 'total_calculation_registers': 1, 'training_parameters': {'mutation': {'program': {'change_action': 0.1, 'change_instruction': 0.9, 'add_instruction': 0.9, 'remove_instruction': 0.8}, 'team': {'add_program': 0.8, 'remove_program': 0.7}}}, 'reinforcement_parameters': {'environment': 'tictactoe'}, 'runs_total': 2, 'use_complex_functions': True, 'initial_team_size': 3, 'point_replacement_rate': 0.2, 'team_replacement_rate': 0.6, 'team_population_size': 30, 'program_population_size': 60, 'advanced_training_parameters': {'diversity': {'genotype_fitness_maintanance': False, 'genotype_configs': {'p_value': 0.1, 'k': 8}, 'fitness_sharing': False}}, 'max_team_size': 5, 'point_population_size': 120, 'minimum_program_size': 5}

################# Overall Best:
1 Run best program: 1793:98, f: 0.86666, team size: 5, team members: [('(2242:88)', 0), ('(2325:91)', 0), ('(57:0)', 1), ('(1346:52)', 2), ('(2494:98)', 2)]
TRAIN: acc: 0.86666, mrecall: 0.86666
TEST: acc: 0.89439, mrecall: 0.81611, recall: [ 0.91780822  0.62146893  0.9090623 ]

Algorithm info:
Class Distributions (test dataset): defaultdict(<type 'int'>, {0: 73, 1: 177, 2: 3178}), for a total of 3428 samples
total samples (train): 3772
total samples (test): 3428
total_input_registers: 21
total_classes: 3
total_registers: 2

Acc per classes: [0.019544924154025672, 0.03208868144690782, 0.8427654609101517]
Acc per classes (counter): [67.0, 110.0, 2889.0]
Confusion Matrix:
[[  67    6    0]
 [  67  110    0]
 [ 147  142 2889]]

Test DR per run: [0.64731, 0.81611]
Test DR, mean: 0.73171, std: 0.0844

recall_per_generation: [[0.027, 0.903, 0.831], [0.027, 0.903, 0.831], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.0, 1.0, 0.939], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.0, 1.0, 0.939], [0.0, 1.0, 0.939], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.027, 1.0, 0.927], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.136, 1.0, 0.803], [0.109, 0.971, 0.817], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 1.0, 0.818], [0.109, 0.988, 0.833], [0.109, 0.988, 0.833], [0.0, 1.0, 0.941], [0.0, 1.0, 0.941], [0.0, 0.988, 0.956], [0.0, 0.988, 0.956], [0.0, 0.988, 0.956], [0.0, 1.0, 0.941], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 1.0, 0.939], [0.0, 0.971, 0.956], [0.0, 0.966, 0.955], [0.0, 0.966, 0.955], [0.0, 0.966, 0.955], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.0, 0.971, 0.949], [0.684, 0.706, 0.873], [0.684, 0.706, 0.873], [0.684, 0.706, 0.873], [0.684, 0.706, 0.873], [0.917, 0.598, 0.918], [0.917, 0.598, 0.918], [0.917, 0.598, 0.918], [0.917, 0.598, 0.918], [0.917, 0.621, 0.909], [0.917, 0.621, 0.909], [0.917, 0.621, 0.909], [0.917, 0.621, 0.909], [0.917, 0.621, 0.909]]

avg_dr_per_generations: [0.546, 0.568, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.598, 0.599, 0.598, 0.599, 0.6, 0.564, 0.564, 0.619, 0.619, 0.616, 0.619, 0.619, 0.616, 0.616, 0.619, 0.619, 0.619, 0.619, 0.613, 0.61, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.623, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.629, 0.63, 0.63, 0.631, 0.631, 0.632, 0.632, 0.632, 0.634, 0.63, 0.628, 0.628, 0.628, 0.628, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.647, 0.642, 0.644, 0.641, 0.644, 0.643, 0.643, 0.643, 0.643, 0.701, 0.698, 0.701, 0.7, 0.729, 0.729, 0.729, 0.729, 0.731, 0.731, 0.731, 0.731, 0.731]
Actions Distribution (last gen.): Counter({2: 30, 0: 23, 1: 7})
Code for team 1793 from generation 98, team size: 5
################

Code for program 57 from generation 0 for action 1
Participate in the teams (28): ['(1793:98)', '(1794:98)', '(1795:99)', '(1796:99)', '(1799:99)', '(1802:99)', '(1803:99)', '(1804:99)', '(1805:99)', '(1807:99)', '(1811:99)', '(1812:99)', '(1814:100)', '(1815:100)', '(1816:100)', '(1817:100)', '(1818:100)', '(1819:100)', '(1820:100)', '(1821:100)', '(1822:100)', '(1823:100)', '(1824:100)', '(1825:100)', '(1826:100)', '(1827:100)', '(1829:100)', '(1830:100)']
Total instructions: 10, total introns: 5
----------------
r[0] = cos(r[0])
r[0] = r[0] / i[10]
if r[1] < r[1]:
r[0] = r[0] * r[0]
if r[0] < r[17]:
r[1] = cos(r[1])
r[0] = r[0] / i[3]
r[0] = r[0] + i[16]
r[1] = ln(r[1])
r[1] = exp(r[1])
----------------
Total instructions (without introns): 5
----------------
r[0] = r[0] / i[10]
r[0] = r[0] * r[0]
if r[0] < r[17]:
r[0] = r[0] / i[3]
r[0] = r[0] + i[16]
----------------

Code for program 1346 from generation 52 for action 2
Participate in the teams (29): ['(1793:98)', '(1794:98)', '(1795:99)', '(1796:99)', '(1799:99)', '(1802:99)', '(1803:99)', '(1804:99)', '(1805:99)', '(1807:99)', '(1811:99)', '(1812:99)', '(1813:100)', '(1814:100)', '(1815:100)', '(1816:100)', '(1817:100)', '(1818:100)', '(1819:100)', '(1820:100)', '(1821:100)', '(1822:100)', '(1823:100)', '(1824:100)', '(1825:100)', '(1827:100)', '(1828:100)', '(1829:100)', '(1830:100)']
Total instructions: 10, total introns: 7
----------------
r[0] = exp(r[0])
if r[0] < r[1]:
r[0] = r[0] / i[6]
r[1] = r[1] * i[13]
r[1] = cos(r[1])
r[0] = cos(r[0])
r[1] = r[1] - i[7]
r[1] = r[1] / r[1]
if r[1] < r[0]:
if r[0] >= r[0]:
----------------
Total instructions (without introns): 3
----------------
if r[0] < r[1]:
r[0] = r[0] / i[6]
if r[0] >= r[0]:
----------------

Code for program 2242 from generation 88 for action 0
Participate in the teams (7): ['(1793:98)', '(1795:99)', '(1799:99)', '(1803:99)', '(1805:99)', '(1814:100)', '(1817:100)']
Total instructions: 11, total introns: 6
----------------
r[1] = exp(r[1])
r[0] = exp(r[0])
r[1] = r[1] / r[1]
r[1] = r[1] + r[1]
r[0] = ln(r[0])
r[0] = cos(r[0])
r[0] = ln(r[0])
r[1] = r[1] + i[7]
r[0] = r[0] / r[1]
if r[1] < r[0]:
if r[0] >= r[0]:
----------------
Total instructions (without introns): 5
----------------
r[1] = r[1] / r[1]
r[1] = r[1] + r[1]
r[1] = r[1] + i[7]
r[0] = r[0] / r[1]
if r[0] >= r[0]:
----------------

Code for program 2325 from generation 91 for action 0
Participate in the teams (25): ['(1793:98)', '(1794:98)', '(1795:99)', '(1796:99)', '(1802:99)', '(1803:99)', '(1804:99)', '(1805:99)', '(1807:99)', '(1811:99)', '(1812:99)', '(1813:100)', '(1815:100)', '(1816:100)', '(1818:100)', '(1819:100)', '(1820:100)', '(1821:100)', '(1822:100)', '(1823:100)', '(1824:100)', '(1825:100)', '(1826:100)', '(1828:100)', '(1830:100)']
Total instructions: 14, total introns: 6
----------------
r[0] = ln(r[0])
r[1] = r[1] + i[16]
r[0] = r[0] / r[1]
r[1] = r[1] + i[4]
if r[0] < r[1]:
r[0] = r[0] / r[1]
if r[0] >= r[0]:
r[0] = r[0] - r[1]
r[1] = cos(r[1])
r[1] = ln(r[1])
r[0] = cos(r[0])
r[1] = cos(r[1])
r[0] = r[0] / i[3]
if r[1] >= r[0]:
----------------
Total instructions (without introns): 8
----------------
r[1] = r[1] + i[16]
r[0] = r[0] / r[1]
r[1] = r[1] + i[4]
if r[0] < r[1]:
r[0] = r[0] / r[1]
if r[0] >= r[0]:
r[0] = r[0] - r[1]
r[0] = r[0] / i[3]
----------------

Code for program 2494 from generation 98 for action 2
Participate in the teams (6): ['(1793:98)', '(1796:99)', '(1807:99)', '(1815:100)', '(1817:100)', '(1826:100)']
Total instructions: 14, total introns: 9
----------------
r[1] = ln(r[1])
r[0] = r[0] / r[0]
if r[0] >= r[1]:
r[1] = r[1] * i[1]
r[1] = exp(r[1])
if r[0] < r[1]:
r[0] = exp(r[0])
r[1] = r[1] / i[7]
r[0] = r[0] - r[0]
r[1] = exp(r[1])
if r[1] >= r[8]:
r[0] = cos(r[0])
r[0] = ln(r[0])
r[1] = r[1] / i[11]
----------------
Total instructions (without introns): 5
----------------
r[0] = r[0] / r[0]
if r[0] >= r[1]:
r[1] = r[1] * i[1]
if r[0] < r[1]:
r[0] = r[0] - r[0]
----------------
################
Finished execution, total elapsed time: 40.606760025 secs
Elapsed times, mean: 20.3033800125, std: 0.471843004227